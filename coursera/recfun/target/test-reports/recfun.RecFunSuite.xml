<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="prashant-HP-ProBook-440-G2" name="recfun.RecFunSuite" tests="11" errors="0" failures="2" skipped="0" time="20.302" timestamp="2020-12-14T12:46:52">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="jna.platform.library.path" value="/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:/usr/lib64:/lib64:/usr/lib:/lib:/usr/lib/x86_64-linux-gnu/libfakeroot"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/><property name="java.vm.version" value="25.275-b01"/><property name="java.vm.vendor" value="Private Build"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="jna.loaded" value="true"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="IN"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="jna.nosys" value="true"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/prashant/scala/coursera/recfun"/><property name="java.runtime.version" value="1.8.0_275-8u275-b01-0ubuntu1~20.04-b01"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/tmp/jna--1391105997/jna4114568356363470181.tmp"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="5.4.0-58-generic"/><property name="user.home" value="/home/prashant"/><property name="user.timezone" value="Asia/Kolkata"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="user.name" value="prashant"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt/bin/sbt-launch.jar"/><property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_275"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/><property name="java.vendor" value="Private Build"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.desktop" value="gnome"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="recfun.RecFunSuite" name="countChange: sorted CHF" time="0.169">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="countChange: unsorted CHF" time="0.007">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="countChange: example given in instructions" time="0.014">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="balance: counting is not enough" time="0.098">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="pascal: col=1,row=2" time="0.001">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="pascal: col=1,row=3" time="0.003">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="balance: ':-)' is unbalanced" time="0.002">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="pascal: col=0,row=2" time="0.0">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="balance: '(if (zero? x) max (/ 1 x))' is balanced" time="10.004">
                                                 <failure message="java.lang.Exception: test timed out after 10000 milliseconds" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: java.lang.Exception: test timed out after 10000 milliseconds
	at recfun.RecFun$.innerFunction$1(RecFun.scala:37)
	at recfun.RecFun$.balance(RecFun.scala:39)
	at recfun.RecFunSuite.balance$colon$u0020$u0027$u0028if$u0020$u0028zero$qmark$u0020x$u0029$u0020max$u0020$u0028$div$u00201$u0020x$u0029$u0029$u0027$u0020is$u0020balanced(RecFunSuite.scala:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
</failure>
                                               </testcase><testcase classname="recfun.RecFunSuite" name="countChange: no pennies" time="0.002">
                                                 
                                               </testcase><testcase classname="recfun.RecFunSuite" name="' is balanced" time="10.002">
                                                 <failure message="java.lang.Exception: test timed out after 10000 milliseconds" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: java.lang.Exception: test timed out after 10000 milliseconds
	at recfun.RecFun$.innerFunction$1(RecFun.scala:37)
	at recfun.RecFun$.balance(RecFun.scala:39)
	at recfun.RecFunSuite.balance$colon$u0020$u0027I$u0020told$u0020him$u0020$u002E$u002E$u002E$u0027$u0020is$u0020balanced(RecFunSuite.scala:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74)
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>